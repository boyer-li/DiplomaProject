{"remainingRequest":"H:\\ideahome\\diploma\\diploma-admin\\node_modules\\babel-loader\\lib\\index.js!H:\\ideahome\\diploma\\diploma-admin\\src\\views\\shop\\goods\\goods.js","dependencies":[{"path":"H:\\ideahome\\diploma\\diploma-admin\\src\\views\\shop\\goods\\goods.js","mtime":1680357703028},{"path":"H:\\ideahome\\diploma\\diploma-admin\\babel.config.js","mtime":1680357702951},{"path":"H:\\ideahome\\diploma\\diploma-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682168233438},{"path":"H:\\ideahome\\diploma\\diploma-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1682168240462}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"H:/ideahome/diploma/diploma-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _goods = _interopRequireDefault(require(\"@/api/shop/goods\"));\nvar _utils = require(\"@/utils/utils\");\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\nvar _default = {\n  name: 'goods',\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      listQuery: {\n        page: 1,\n        limit: 20,\n        name: undefined\n      },\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {},\n      apiUrl: (0, _utils.getApiUrl)()\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      _goods.default.getList(this.listQuery).then(function (response) {\n        _this.list = response.data.records;\n        _this.listLoading = false;\n        _this.total = response.data.total;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.name = '';\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleClose: function handleClose() {},\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    add: function add() {\n      this.$router.push('goodsEdit');\n    },\n    edit: function edit(id) {\n      this.$router.push({\n        path: 'goodsEdit',\n        query: {\n          id: id\n        }\n      });\n    },\n    changeIsOnSale: function changeIsOnSale(data) {\n      var _this2 = this;\n      _goods.default.changeIsOnSale(data.id, data.isOnSale).then(function (response) {\n        _this2.$message({\n          message: data.isOnSale ? '上架成功' : '下架成功',\n          type: 'success'\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",null]}