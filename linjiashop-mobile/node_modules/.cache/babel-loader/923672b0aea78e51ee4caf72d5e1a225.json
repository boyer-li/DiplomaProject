{"remainingRequest":"H:\\ideahome\\linjiashop\\linjiashop-mobile\\node_modules\\babel-loader\\lib\\index.js!H:\\ideahome\\linjiashop\\linjiashop-mobile\\src\\router.js","dependencies":[{"path":"H:\\ideahome\\linjiashop\\linjiashop-mobile\\src\\router.js","mtime":1683043405887},{"path":"H:\\ideahome\\linjiashop\\linjiashop-mobile\\babel.config.js","mtime":1680357703151},{"path":"H:\\ideahome\\linjiashop\\linjiashop-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682170151740},{"path":"H:\\ideahome\\linjiashop\\linjiashop-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1682170152097}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"H:/ideahome/linjiashop/linjiashop-mobile/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.router = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"H:/ideahome/linjiashop/linjiashop-mobile/node_modules/@babel/runtime/helpers/typeof.js\"));\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.weak-map\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _vue = _interopRequireDefault(require(\"vue\"));\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\nvar _store = _interopRequireDefault(require(\"@/store\"));\nvar _storage = _interopRequireDefault(require(\"@/utils/storage\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || (0, _typeof2.default)(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n_vue.default.use(_vueRouter.default);\nvar routes = [{\n  path: '*',\n  redirect: '/index'\n}, {\n  name: 'error',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/common/error\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'System anomaly'\n  }\n}, {\n  name: 'login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/login\"));\n    });\n  },\n  meta: {\n    title: 'Login'\n  }\n}, {\n  name: 'index',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/index\"));\n    });\n  },\n  meta: {\n    title: 'Automated Second-Hand Trading Company Information System'\n  }\n}, {\n  path: '/topic/:id',\n  name: 'topic',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/topic\"));\n    });\n  },\n  meta: {\n    title: 'Recommended Topics'\n  }\n}, {\n  name: 'list',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/goods/list\"));\n    });\n  },\n  meta: {\n    title: 'Automated Second-Hand Trading Company Information System'\n  }\n}, {\n  path: '/goods/:id',\n  name: 'goods',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/goods\"));\n    });\n  },\n  meta: {\n    title: 'Product Details'\n  }\n}, {\n  name: 'search',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/search\"));\n    });\n  },\n  meta: {\n    title: 'Found'\n  }\n}, {\n  name: 'user',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/user\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Member Center'\n  }\n}, {\n  name: 'setting',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/setting\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Settings'\n  }\n}, {\n  name: 'updateUserName',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/setting/updateUserName\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Change Name'\n  }\n}, {\n  name: 'updateMobile',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/setting/updateMobile\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Change phone number'\n  }\n}, {\n  name: 'updatePwd',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/setting/updatePwd\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Change password'\n  }\n}, {\n  name: 'avatar',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/setting/avatar\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Modify avatar'\n  }\n}, {\n  name: 'order',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/order\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'My Orders'\n  }\n}, {\n  name: 'order/detail/:orderSn',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/order/detail\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'My Orders'\n  }\n}, {\n  name: 'order/expressInfo/:orderSn',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/order/expressInfo\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Logistics Information'\n  }\n}, {\n  name: 'favorite',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/favorite\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Favorite Products'\n  }\n}, {\n  name: 'payment/callback/:orderSn',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/order/payment/callback\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Payment Results'\n  }\n}, {\n  name: 'checkout',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/order/checkout\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Submit an order'\n  }\n}, {\n  name: 'payment',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/order/payment\"));\n    });\n  },\n  meta: {\n    requireAuth: true,\n    title: 'Checkout counter'\n  }\n}, {\n  name: 'address',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/address\"));\n    });\n  },\n  meta: {\n    title: 'Receiving Address'\n  }\n}, {\n  name: 'address/edit',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/address/edit\"));\n    });\n  },\n  meta: {\n    title: 'Add shipping address'\n  }\n}, {\n  name: 'cart',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require(\"./view/cart\"));\n    });\n  },\n  meta: {\n    // requireAuth: true,\n    title: 'Shopping Cart'\n  }\n}];\nroutes.forEach(function (route) {\n  route.path = route.path || '/' + (route.name || '');\n});\nvar router = new _vueRouter.default({\n  routes: routes\n});\nexports.router = router;\nrouter.beforeEach(function (to, from, next) {\n  var title = to.meta && to.meta.title;\n  if (title) {\n    document.title = title;\n  }\n  // 判断该路由是否需要登录权限\n  if (to.meta.requireAuth) {\n    if (_storage.default.getToken()) {\n      next();\n    } else {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        } // 将跳转的路由path作为参数，登录成功后跳转到该路由\n      });\n    }\n  } else {\n    next();\n  }\n});",null]}